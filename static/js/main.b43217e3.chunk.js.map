{"version":3,"sources":["components/ContactsDisplay.jsx","components/Day.jsx","components/MeetingDisplay.jsx","components/Calander.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContactsDisplay","props","className","id","contact","onClick","e","setcontact","target","Day","dayNum","data","filter","Date","curYear","curMonth","map","i","getHours","getMinutes","MeetingDisplay","alert","meeting","toLocaleDateString","undefined","weekday","year","month","day","Calander","useState","pickedDate","setpickedDate","sign","name","date","useEffect","document","getElementById","console","log","getMonth","getFullYear","setMonth","phone","c","startFrom","getDay","daysInMonth","getDate","week","x","push","length","createMonth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4SAkBeA,MAff,SAAyBC,GACrB,OACI,8BACI,sBAAKC,UAAU,UAAUC,GAAIF,EAAMG,QAAN,KAAuBC,QAAS,SAACC,GAC1DL,EAAMM,WAAWD,EAAEE,OAAOL,KAD9B,cAKQF,EAAMG,QAAN,W,MCELK,MAVf,SAAaR,GACT,OACI,gCACI,qBAAKC,UAAU,SAAf,SAAwB,+BAAOD,EAAMS,WACrC,qBAAKR,UAAU,OAAf,SAAuBD,EAAMU,KAAKC,QAAO,SAAAN,GAAC,OAAIA,EAAC,KAAW,IAAIO,KAAKZ,EAAMa,QAASb,EAAMc,SAAUd,EAAMS,QAAU,OAAYJ,EAAC,KAAW,IAAIO,KAAKZ,EAAMa,QAASb,EAAMc,SAAUd,EAAMS,QAAU,KACjMM,KAAI,SAACV,EAAGW,GAAJ,OAAU,sBAAad,GAAI,KAAKG,EAAC,KAAvB,cAAoCA,EAAC,KAASY,WAA9C,IAA2DZ,EAAC,KAASa,aAArE,IAAoFb,EAAC,OAA3EW,Y,MCMtBG,MAXf,SAAwBnB,GAEpB,OACI,sBAAKC,UAAU,UAAUG,QAAS,kBAAMgB,MAAMpB,EAAMqB,QAAN,OAA9C,UACKrB,EAAMqB,QAAN,KAAuB,IACvBrB,EAAMqB,QAAN,KAAsBC,wBAAmBC,EAJlC,CAAEC,QAAS,QAASC,KAAM,UAAWC,MAAO,OAAQC,IAAK,gBC+F9DC,MA7Ff,WAAqB,IAAD,EAEoBC,mBAAS,IAAIjB,MAFjC,mBAETkB,EAFS,KAEGC,EAFH,OAGcF,mBAAS,MAHvB,mBAGT1B,EAHS,KAGAG,EAHA,OAIsBuB,mBAAS,MAJ/B,mBAMVG,GANU,UAMJ,CAAC,IAAK,MAGdtB,EAAO,CACP,CAACuB,KAAM,MAAOC,KAAM,IAAItB,KAAK,KAAM,EAAG,GAAI,KAAM,CAACqB,KAAM,MAAOC,KAAM,IAAItB,KAAK,KAAM,EAAG,GAAI,KAAM,CAACqB,KAAM,MAAOC,KAAM,IAAItB,KAAK,KAAM,EAAG,GAAI,KAC1I,CAACqB,KAAM,MAAOC,KAAM,IAAItB,KAAK,KAAM,EAAG,GAAI,GAAI,KAAM,CAACqB,KAAM,MAAOC,KAAM,IAAItB,KAAK,KAAM,EAAG,EAAG,IAAK,CAACqB,KAAM,MAAOC,KAAM,IAAItB,KAAK,KAAM,EAAG,GAAI,KAC5I,CAACqB,KAAM,MAAOC,KAAM,IAAItB,KAAK,KAAM,EAAG,GAAI,MAuC9C,OAPFuB,qBAAU,WACHhC,IACDiC,SAASC,eAAe,KAAKlC,GAASF,UAAY,QAErD,CAACE,IAIE,gCACI,wBAAQC,QAAS,kBAAMkC,QAAQC,IAAIpC,IAAnC,kBACA,wBAAQC,QAAS,kBAAMgC,SAASC,eAAe,SAASpC,UAAY,MAApE,mBACA,sBAAKA,UAAU,eAAf,UACI,+BAjDO,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAiDtG6B,EAAWU,YAA3B,MAA2CV,EAAWW,iBACtD,wBAAQrC,QAAS,kBAAM2B,EAAc,IAAInB,KAAKkB,EAAWY,SAASZ,EAAWU,WAAa,MAA1F,SAAiGR,EAAK,KAAa,IACnH,wBAAQ5B,QAAS,kBAAM2B,EAAc,IAAInB,KAAKkB,EAAWY,SAASZ,EAAWU,WAAa,MAA1F,SAAiGR,EAAK,QAG1G,8BACI,gCAAO,gCACH,+BACI,oBAAI/B,UAAU,gBAAd,SAnDL,CAAC,CAACgC,KAAM,MAAOU,MAAO,cAAe,CAACV,KAAM,MAAOU,MAAO,cACzD,CAACV,KAAM,MAAOU,MAAO,cAAe,CAACV,KAAM,MAAOU,MAAO,eAmDvC5B,KAAI,SAAC6B,EAAE5B,GAAH,OAAS,cAAC,EAAD,CAAyBb,QAASyC,EAAGtC,WAAYA,GAA3BU,QAEjD,6BACA,wBAAOf,UAAU,WAAjB,UACI,gCACA,6BA9DT,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YA+DlDc,KAAI,SAACV,EAAEW,GAAH,OAAQ,oBAAYf,UAAU,WAAtB,SAAkCI,GAAzBW,UAG7B,gCAxDN,WAOd,IANA,IAAI6B,EAAY,IAAIjC,KAAKkB,EAAWW,cAAeX,EAAWU,WAAY,GAAGM,SACzEC,EAAc,IAAInC,KAAKkB,EAAWW,cAAeX,EAAWU,WAAa,EAAG,GAAGQ,UAE/EtB,EAAQ,GACRuB,EAAO,GAEHC,EAAI,EAAGA,EAAIL,EAAWK,IAC1BD,EAAKE,KAAK,KAGd,IAAI,IAAID,EAAI,EAAGA,GAAKH,EAAaG,IACV,IAAhBD,EAAKG,QAAgBF,IAAMH,GAC1BE,EAAKE,KAAKD,GACVxB,EAAMyB,KAAKF,GACXA,EAAO,IAEPA,EAAKE,KAAKD,GAIlB,OAAOxB,EAoCkB2B,GAActC,KAAI,SAACkC,EAAKjC,GAAN,OAAY,6BAAaiC,EAAKlC,KAAI,SAACV,EAAEW,GAAH,OACrD,oBAAIf,UAAU,SAAd,SAAgC,cAAC,EAAD,CAAaQ,OAAQJ,EAAGQ,QAASiB,EAAWW,cAAe3B,SAAUgB,EAAWU,WAAY9B,KAAMA,GAAxFM,IAAdA,OADYA,aAKhD,qBAAIf,UAAU,eAAd,UACI,wBAAQG,QAAS,kBAAME,EAAW,OAAlC,mBACCI,EAAKC,QAAO,SAAAN,GAAC,OAAgB,OAAZF,GAA6BE,EAAC,OAAaF,KAAUY,KAAI,SAACV,EAAEW,GAAH,OAAS,cAAC,EAAD,CAAwBK,QAAShB,GAAZW,sBC7EtHsC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAASC,eAAe,SAM1BkB,M","file":"static/js/main.b43217e3.chunk.js","sourcesContent":["import React from 'react'\r\nimport './ContactsDisplay.css'\r\n\r\nfunction ContactsDisplay(props) {\r\n    return (\r\n        <div >\r\n            <div className='contact' id={props.contact['name']} onClick={(e) =>{ \r\n                props.setcontact(e.target.id)\r\n                // document.getElementById('m-'+props.contact['name']).className = 'x1'\r\n            }\r\n                \r\n                }> {props.contact['name']}</div>\r\n           \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactsDisplay\r\n","import React from 'react'\r\nimport './Day.css'\r\n\r\nfunction Day(props) {\r\n    return (\r\n        <div>\r\n            <div className='header'><span>{props.dayNum}</span></div>\r\n            <div className='body'>{props.data.filter(e => e['date'] - new Date(props.curYear, props.curMonth, props.dayNum) < 86400000 && e['date'] - new Date(props.curYear, props.curMonth, props.dayNum) > 0)\r\n            .map((e, i) => <div key={i} id={'m-'+e['name']}> { e['date'].getHours()}:{e['date'].getMinutes()} {e['name']}</div>)}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Day\r\n","import React from 'react'\r\nimport './MeetingDisplay.css'\r\n\r\nfunction MeetingDisplay(props) {\r\n    const options = { weekday: 'short', year: 'numeric', month: 'long', day: 'numeric' }\r\n    return (\r\n        <div className='contact' onClick={() => alert(props.meeting['name'])}>\r\n            {props.meeting['name']}{' '}\r\n            {props.meeting['date'].toLocaleDateString(undefined, options)}\r\n           {/* {props.meeting['date'].getHours()} {props.meeting['date'].getHours()}: {props.meeting['date'].getMinutes()} {props.meeting['name']} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MeetingDisplay\r\n","import React, {useEffect, useState} from 'react'\r\nimport './Calander.css'\r\nimport ContactsDisplay from './ContactsDisplay';\r\nimport Day from './Day'\r\nimport MeetingDisplay from './MeetingDisplay';\r\n\r\nfunction Calander() {\r\n    \r\n    const [pickedDate, setpickedDate] = useState(new Date());\r\n    const [contact, setcontact] = useState(null)\r\n    const [prevcontact, setprevcontact] = useState(null)\r\n    \r\n    const sign =['<', '>']\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    const header = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n    let data = [\r\n        {name: 'avi', date: new Date(2021, 3, 15, 15)}, {name: 'ben', date: new Date(2021, 3, 15, 11)}, {name: 'gad', date: new Date(2021, 3, 15, 10)}, \r\n        {name: 'gad', date: new Date(2021, 3, 15, 14, 30)}, {name: 'dan', date: new Date(2021, 3, 1, 9)}, {name: 'dan', date: new Date(2021, 3, 12, 13)}, \r\n        {name: 'dan', date: new Date(2021, 3, 15, 16)}]\r\n    let contacts = [{name: 'avi', phone: '0501111111'}, {name: 'ben', phone: '0502222222'}, \r\n                    {name: 'gad', phone: '0503333333'}, {name: 'dan', phone: '0504444444'}]\r\n    // data = []\r\n    let d = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30]\r\n\r\n    let createMonth = () => { // create the structure for calander table format\r\n        let startFrom = new Date(pickedDate.getFullYear(), pickedDate.getMonth(), 1).getDay()\r\n        let daysInMonth = new Date(pickedDate.getFullYear(), pickedDate.getMonth() + 1, 0).getDate()\r\n\r\n        let month = []\r\n        let week = []\r\n\r\n        for(let x = 0; x < startFrom; x++){\r\n            week.push('-')\r\n        }\r\n\r\n        for(let x = 1; x <= daysInMonth; x++){\r\n            if(week.length === 6 || x === daysInMonth){\r\n                week.push(x)\r\n                month.push(week)\r\n                week = []\r\n            }else{\r\n                week.push(x)\r\n            }\r\n\r\n        }\r\n        return month\r\n\r\n        // console.log(month,curMonth )\r\n    }\r\n\r\n  useEffect(() => {\r\n      if(contact){\r\n        document.getElementById('m-'+contact).className = 'x1'\r\n      }\r\n  }, [contact]);\r\n\r\n   \r\n    return (\r\n        <div>\r\n            <button onClick={() => console.log(contact)}> log</button>\r\n            <button onClick={() => document.getElementById('m-gad').className = 'x1'}> log2</button>\r\n            <div className='calander-bar'>\r\n                <h2>{monthNames[pickedDate.getMonth()]} - {pickedDate.getFullYear()}</h2>\r\n                <button onClick={() => setpickedDate(new Date(pickedDate.setMonth(pickedDate.getMonth() - 1)))}>{sign[0]}</button>{' '}\r\n                <button onClick={() => setpickedDate(new Date(pickedDate.setMonth(pickedDate.getMonth() + 1)))}>{sign[1]}</button>\r\n\r\n            </div>\r\n            <div>\r\n                <table><tbody>\r\n                    <tr>\r\n                        <td className='contacts-list'> \r\n                            {contacts.map((c,i) => <ContactsDisplay key={i} contact={c} setcontact={setcontact}></ContactsDisplay>)}\r\n                        </td>\r\n                        <td> \r\n                        <table className='calander'>\r\n                            <thead>\r\n                            <tr>\r\n                            {header.map((e,i)=> <th key={i} className='t-header'>{e}</th>)}\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {createMonth().map((week,i) => <tr key={i}>{week.map((e,i) => \r\n                                <td className='td-day' key={i}>{<Day key={i} dayNum={e} curYear={pickedDate.getFullYear()} curMonth={pickedDate.getMonth()} data={data}></Day>}</td>)}</tr>)}\r\n                            </tbody>\r\n                        </table>              \r\n                        </td>\r\n                        <td className='meeting-list'> \r\n                            <button onClick={() => setcontact(null)}> All </button>\r\n                            {data.filter(e => contact === null ? 1 === 1 : e['name'] === contact ).map((e,i) => <MeetingDisplay key={i} meeting={e}></MeetingDisplay>)}\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n                </table>  \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Calander\r\n","import './App.css';\nimport Calander from './components/Calander';\n\nfunction App() {\n  return (\n    <div>\n      <Calander></Calander>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}